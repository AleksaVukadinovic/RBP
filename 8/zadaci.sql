-- Napraviti tabelu TEST sa kolonama ID (ceo broj, primarni ključ) i SLOVO (karakter). Obezbediti da se vrednost ID automatski generiše ukoliko nije navedena. Zatim izvršavati stavke po redu:
-- U datu tabelu uneti vrednost SLOVO='a'
-- U datu tabelu uneti vrednost ID=2, SLOVO='b'
-- U datu tabelu uneti vrednost SLOVO='c'

CREATE TABLE TEST
(
    ID    INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (MINVALUE 1),
    SLOVO CHAR(1),
    PRIMARY KEY (ID)
);

INSERT INTO TEST(SLOVO)
VALUES ('a');
INSERT INTO TEST(ID, SLOVO)
VALUES (2, 'b');
INSERT INTO TEST(SLOVO)
VALUES ('c');

-- Za svakog studenta smera Informatika na osnovnim akademskim studijama,
-- koji je fakultet upisao 2015. godine, pronaći koje obavezne predmete nije položio.
-- Izdvojiti ime i prezime studeta i naziv predmeta.

SELECT D.IME, D.PREZIME, P.NAZIV
FROM DA.DOSIJE D
         JOIN DA.STUDIJSKIPROGRAM SP ON D.IDPROGRAMA = SP.ID
         JOIN DA.NIVOKVALIFIKACIJE NK ON SP.IDNIVOA = NK.ID
         JOIN DA.PREDMETPROGRAMA PP on D.IDPROGRAMA = PP.IDPROGRAMA
         JOIN DA.PREDMET P ON PP.IDPREDMETA = P.ID
WHERE YEAR(D.DATUPISA) = 2015
  AND SP.NAZIV = 'Informatika'
  AND NK.NAZIV = 'Osnovne akademske studije'
  AND PP.VRSTA = 'obavezan'
  AND NOT EXISTS(SELECT *
                 FROM DA.ISPIT I
                 WHERE I.IDPREDMETA = P.ID
                   AND D.INDEKS = I.INDEKS
                   AND I.OCENA > 5
                   AND I.STATUS = 'o');

-- Napraviti pogled kojim se izdvajaju svi ispitni rokovi održani od 2018/2019. školske godine. A zatim odraditi sledeće:
-- Uneti ispitni rok jan1 2022. godine u pogled.
-- Uneti u tabelu ispitnirok rok jan2 2022
-- U pogled uneti rok sa oznakom 'xxx' održan 2015-e godine.
-- Promeni oznaku roka xxx 2015 u kreiranom pogledu u 'test'.
-- Obrisati rok sa oznakom 'xxx' iz pogleda.
-- Obrisati ispitne rokove održane 2022 iz pogleda.
-- Obrisati pogled.
--
CREATE VIEW ROKOVI_2018 AS
SELECT *
FROM DA.ISPITNIROK IR
WHERE SKGODINA >= 2018;

INSERT INTO ROKOVI_2018
VALUES (2018, 'jan1', 'TEST', CURRENT_DATE - 30 DAYS, CURRENT_DATE),
       (2018, 'jan2', 'TEST', CURRENT_DATE - 30 DAYS, CURRENT_DATE),
       (2015, 'XXX', 'TEST', CURRENT_DATE - 30 DAYS, CURRENT_DATE);

UPDATE ROKOVI_2018
SET OZNAKAROKA = 'TEST'
WHERE OZNAKAROKA = 'XXX'
  AND SKGODINA = 2015;

DELETE
FROM ROKOVI_2018
WHERE OZNAKAROKA = 'XXX';
DELETE
FROM ROKOVI_2018
WHERE SKGODINA = '2018';
DROP VIEW ROKOVI_2018;

-- Napraviti pogled sa svim prijavljenim ispitima Marka Petrovića.
-- A zatim svim ispitima iz pogleda staviti datum polaganja na null.

CREATE VIEW ISPITI_MARKA_PETROVICA AS
SELECT *
FROM DA.ISPIT I
WHERE I.INDEKS IN (SELECT D.INDEKS FROM DA.DOSIJE D WHERE D.IME = 'Marko' AND D.PREZIME = 'Petrovic');

UPDATE ISPITI_MARKA_PETROVICA
SET DATPOLAGANJA = NULL;

-- Napraviti pogled kojim se izdvajaju svi prijavljeni ispiti studenata koji se zovu Marko ili Marija,
-- a u ispitnom roku jan1 2018/2019. šk. godine su položili barem jedan ispit.
-- Pogled napisati tako da je kroz njega moguće dodavanje novih ispita koji zadovoljavaju uslove pogleda.
-- Pokušati dodati sledeća dva reda:
-- Marko: indeks 20150013, idpredmeta 2027, skgodina 2018, oznakaroka sep2, status o, 40 poena, ocena 5
-- Jovana: indeks 20150001, idpredmeta 2027, skgodina 2018, oznakaroka sep2, status o, 40 poena, ocena 5.
-- Ukoliko neko ubacivanje ne uspe pokušati uneti red direktno u tabelu ispit.
-- Za dva uneta reda pokušati izmenu datuma polaganja nad pogledom na današnji datum.
-- Ukoliko izmena nad pogledom ne uspe odraditi je direktno na tabeli.
-- Na kraju pokuati brisanje ova dva reda preko pogleda.

CREATE VIEW ISPITI_MM AS
SELECT I.*
FROM DA.ISPIT I
WHERE INDEKS IN (SELECT INDEKS
                 FROM DA.DOSIJE
                 WHERE IME IN ('Marko', 'Marija'))
  AND EXISTS(SELECT *
             FROM DA.ISPIT I1
             WHERE I.INDEKS = I1.INDEKS
               AND I1.SKGODINA = 2018
               AND I1.OZNAKAROKA = 'jan1'
               AND I1.OCENA > 5
               AND I.STATUS = 'o')
WITH CHECK OPTION;

INSERT INTO ISPITI_MM(INDEKS, IDPREDMETA, SKGODINA, OZNAKAROKA, STATUS, POENI, OCENA)
VALUES (20150013, 2027, 2018, 'sep2', 'o', 40, 5),
       (20150001, 2027, 2018, 'sep2', 'o', 40, 5);

-- TODO: FINISH REST

-- Napraviti indeks tabele dosije po imenu i prezimenu u opadajućem redosledu. Zatim ga obrisati.

CREATE INDEX IDX_IME_PREZIME ON DA.DOSIJE (IME DESC, PREZIME DESC);
DROP INDEX IDX_IME_PREZIME;

-- Napisati korisnički definisanu funkciju koja vraća cenu predmeta za samofinansirajuće studente.
-- Kao argument se zadaje broj espb. Cena jednog espb boda je 2000 dinara.

CREATE FUNCTION CENA_PREDMETA(ESBP INTEGER) RETURNS INTEGER
    RETURN ESBP * 2000;

-- Napisati korisnički definisanu funkciju koja vraća cenu predmeta za samofinansirajuće studente.
-- Kao argument se zadaje id predmeta. Cena jednog espb boda je 2000 dinara.

CREATE FUNCTION CENA_PREDMETA2(ID_PREDMETA SMALLINT) RETURNS FLOAT
    RETURN (SELECT P.ESPB
            FROM DA.PREDMET P
            WHERE P.ID = ID_PREDMETA) * 2000.0;

VALUES CENA_PREDMETA2(1578);

-- Napisati korisnički definisnu funkciju koja vraća prosek studenta sa zadatim indekom.
-- Zaokružiti prosek na dve decimale.

CREATE FUNCTION PROSEK(INDEKS_STUDENTA INTEGER) RETURNS FLOAT
    RETURN
        SELECT DECIMAL(AVG(OCENA * 1.0), 4, 2)
        FROM DA.ISPIT I
        WHERE I.INDEKS = INDEKS_STUDENTA
          AND I.OCENA > 5
          AND I.STATUS = 'o';

SELECT INDEKS, IME, PREZIME, PROSEK(INDEKS)
FROM DA.DOSIJE;

-- Napisati korisnički definisanu funkciju koja vraća koji je danas dan.
-- Vraća naziv dana u nedelju ukoliko je radni dan, inače vraća 'WEEKEND'.

CREATE FUNCTION DANASNJI_DAN() RETURNS VARCHAR(30)
    RETURN CASE WHEN DAYOFWEEK(CURRENT_DATE) BETWEEN 2 AND 6 THEN DAYNAME(CURRENT_DATE) ELSE 'WEEKEND' END;